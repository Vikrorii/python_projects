import random
from datetime import date, datetime
import customtkinter as ctk

# Налаштування вікна
ctk.set_appearance_mode("dark")
window = ctk.CTk()
window.title("Гороскоп")
window.geometry("550x690")
window.resizable(False, False)

# Список передбачень
random_messages = ["Буде боляче. Остерігайтеся, щоб вам не розбили серце. На роботі очікуйте нових випробувань. ",
                   "Сміливо рухайтеся. У стосунках додайте драйву, а на роботі слід бути більш енергійними.",
                   "Буде боляче. У стосунках потрібно зціпити зуби та щось вирішувати. На роботі остерігайтеся ворогів. ",
                   "Прагніть щастя. У любові насолоджуйтеся щастям. У русі кар'єрними сходами не робіть зупинок. ",
                   "Рух - це життя. У стосунках вирушайте у романтичну поїздку. А на роботі можливі відрядження. ",
                   "Гідно працюйте та отримаєте результат. У любові не забувайте про приємні сюрпризи. На роботі просіть премію. ",
                   "Все змінюється, варто бути готовим до змін. У стосунках ситуація зміниться. На роботі підготуйте запасний варіант дій. ",
                   "Перед вами нові можливості. У любові пройдіть перевірку фінансами. На роботі шукайте новий фінансовий проєкт. ",
                   "Рухайтеся вперед. У стосунках додайте пристрасті. А на роботі спробуйте стати лідером.  ",
                   "Не варто брати на себе все. У любові буде важко. На роботі очікуйте нових викликів.",
                   "Вас можуть обманути. У стосунках будьте обережними. А на роботі перевіряйте друзів та колег.",
                   "Стримуйте свої амбіції і знайдіть компромісне рішення – це в інтересах усієї вашої родини. Інакше ризикуєте залишитися біля розбитого корита. Ваша енергія потребує гідного застосування. Використовуйте її для творення.",
                   "Будьте обачними, балансуючи між гумором і сарказмом. Ваша уїдливість не принесе вам успіху сьогодні. Не показуйте нікому, що ви чогось боїтеся – це абсолютно не в ваших інтересах.",
                   "Не чекайте милості від оточення, та й визнання сьогодні ви навряд чи дочекаєтеся, краще нагородіть себе самі. Те, що ви не хочете брати на себе відповідальність, ще не означає, що вам вдасться її уникнути.",
                   "Вам сьогодні протипоказано вступати в суперечки і дискусії. Чим більше уваги ви будете приділяти тій ситуації, яка склалася навколо вас, тим більше сил і нервів на неї витратите. Проявіть розсудливість.",
                   "Вам сьогодні протипоказано вступати в суперечки і дискусії. Чим більше уваги ви будете приділяти тій ситуації, яка склалася навколо вас, тим більше сил і нервів на неї витратите. Проявіть розсудливість.",
                   "Ви здатні легко пристосовуватися до обставин – це навіть викличе заздрість оточення. Прислухайтеся до порад колег. Постарайтеся роздати старі борги і не давати неправдивих обіцянок."]

last_input_date = None #Зміна, для перевірки,щоб користувач не отримував більше 2 передбачень


# Функція перевірки дати, щоб не бути старше 125 років, і молодше сьогоднішнього дня
def check_date_validity(birth_date):
    today = date.today()
    if birth_date > today:
        return False, "Ви ще не народилися!"
    age = today.year - birth_date.year - ((today.month, today.day) < (birth_date.month, birth_date.day))
    if age > 125:
        return False, "Ви занадто старі!"
    return True, str(age)


# Функція визначення знаку зодіаку
def get_zodiac_sign(day, month):
    if (month == 12 and day >= 22) or (month == 1 and day <= 20):
        return (
            "Козеріг.\nКозеріг підіймається на гору прямо до вершини і знає, що терпіння, наполегливість і відданість справі — єдиний спосіб піднятися на вершину. Останній земний знак зодіаку, "
            "Козеріг, представлений морським козлом, міфологічною істотою з тілом цапа і хвостом риби."
         )
    elif (month == 1 and day >= 21) or (month == 2 and day <= 19):
        return ("Водолій.\nНезважаючи на воду в назві, Водолій насправді є останнім повітряним знаком Зодіаку. Інноваційний, прогресивний і безсоромно революційний Водолій представлений водоносцем, містичним цілителем, "
        "що дарує воду або життя землі. Зрештою, Водолій прагне зробити світ кращим.")
    elif (month == 2 and day >= 20) or (month == 3 and day <= 20):
        return (
            "Риби.\nРиби — найінтуїтивніший, найчутливіший і найчуйніший знак зодіаку — і це тому, що він останній з останніх."
            "Його символізують дві риби, які пливуть у протилежних напрямках, що символізує постійний поділ уваги Риб між фантазією і реальністю.")
    elif (month == 3 and day >= 21) or (month == 4 and day <= 20):
        return ("Овен.\nОвен любить бути номером один. Природно, цьому динамічному вогняному знаку не чужі змагання."
                " Сміливі й амбітні, Овни з головою занурюються навіть у найскладніші ситуації і завжди намагаються опинитися на висоті!")
    elif (month == 4 and day >= 21) or (month == 5 and day <= 21):
        return (
            "Телець.\nТельці люблять відпочивати в безтурботному, пасторальному оточенні, оточеному м'якими звуками, "
            "заспокійливими ароматами і соковитими смаками.")
    elif (month == 5 and day >= 22) or (month == 6 and day <= 21):
        return ("Близнюки.\nСпонтанні, грайливі й чарівно ексцентричні Близнюки рухомі ненаситною цікавістю. "
                "Цей повітряний знак, символізований небесними близнюками, був зацікавлений у настільки багатьох заняттях, "
                "що йому довелося подвоїти себе.")
    elif (month == 6 and day >= 22) or (month == 7 and day <= 22):
        return ("Рак.\nРаки мають високу інтуїцію, і їхні екстрасенсорні здібності проявляються в відчутних просторах."
                " Але, як і ракоподібні з твердим панциром, цей водний знак готовий зробити все можливе, щоб захистити себе емоційно."
              )
    elif (month == 7 and day >= 23) or (month == 8 and day <= 22):
        return ("Лев.\nПристрасний, відданий і драматичний Лев — енергійний вогняний знак. "
                "Вони раді прийняти свій королівський статус: Життєрадісні, театральні й палкі Леви люблять грітися в центрі уваги і святкувати… "
                "ну, самих себе.")
    elif (month == 8 and day >= 23) or (month == 9 and day <= 23):
        return ("Діва.\nДіва — це земний знак, історично представлений богинею пшениці та землеробства, асоціація.Цей земний знак у душі перфекціоніст і не боїться вдосконалювати навички за допомогою старанної та послідовної практики.")
    elif (month == 9 and day >= 24) or (month == 10 and day <= 23):
        return (
            "Терези.\nТерези представлені терезами (що цікаво, єдиним неживим об'єктом зодіаку), асоціацією, що відображає прагнення "
            "Терезів до встановлення рівноваги. Терези одержимі симетрією і прагнуть створити рівновагу в усіх сферах життя "
            "— особливо коли йдеться про сердечні справи.")
    elif (month == 10 and day >= 24) or (month == 11 and day <= 22):
        return (
            "Скорпіон.\nСкорпіон — водний знак, який використовує емоційну енергію як паливо, розвиваючи потужну мудрість як у фізичному, "
            "так і в невидимому світі. Фактично, надзвичайну сміливість Скорпіон черпає зі своїх екстрасенсорних здібностей, "
            "що робить цей знак одним із найскладніших і найдинамічніших знаків зодіаку.")
    elif (month == 11 and day >= 23) or (month == 12 and day <= 21):
        return ("Стрілець.\nСтрільці, представлені лучником, завжди прагнуть знань. Останній вогненний знак зодіаку,"
                " Стрілець розпочинає свої численні заняття, ганяючись за географічними, інтелектуальними та духовними пригодами.")
    else:
        return "Помилка у визначенні знаку зодіаку."


# Обробка передбачення
def process_prediction():
    global last_input_date
    try:
        name = name_entry.get().strip() #перевірка чи поле не пусте. І передача в лейбл попередження
        if not name:
            result_label.configure(text="Будь ласка, введіть ваше ім'я!", text_color="red")
            return

        birth_date = datetime.strptime(date_entry.get(), "%d.%m.%Y").date()

        if birth_date == last_input_date:#перевірка чи дата не одна і таж сама
            result_label.configure(text="Ви вже отримали передбачення для цієї дати!", text_color="orange")
            return

        is_valid, age = check_date_validity(birth_date)
        if not is_valid:
            result_label.configure(text=age, text_color="red")  # age contains error message in this case
            return

        zodiac_sign = get_zodiac_sign(birth_date.day, birth_date.month)
        prediction = random.choice(random_messages)
        last_input_date = birth_date

        #передача інформацію до лейблу
        result_label.configure(
            text=f"{name} ({age} років)\n\nВаш знак зодіаку: {zodiac_sign}\n\nПередбачення: {prediction}",
            text_color="white"
        )
        #вивід інформації про неправильний формат
    except ValueError:
        result_label.configure(text="Неправильний формат дати!", text_color="red")


# Інтерфейс
#Перший текст-вітання
title_label = ctk.CTkLabel(window, text="Вітаю! Надайте своє ім'я і дату народження", wraplength=350,
                           font=("Arial", 24, "bold"))
title_label.pack(pady=25)

#Другий текст прохання з іменем
name_label = ctk.CTkLabel(window, text="Введіть ваше ім'я:",font=("Arial", 15, "bold"))
name_label.pack()


#Поле для Вводу імені
name_entry = ctk.CTkEntry(window, width=200)
name_entry.pack(pady=10)


#Третій текст прохання з датою
date_label = ctk.CTkLabel(window, text="Введіть дату народження (ДД.ММ.РРРР):",font=("Arial", 15, "bold"))
date_label.pack()


#Поле для Вводу дати
date_entry = ctk.CTkEntry(window, width=200)
date_entry.pack(pady=10)


#Кнопка для відправки данних
submit_button = ctk.CTkButton(window, text="Дізнатися передбачення", fg_color="#00aacc",command=process_prediction, corner_radius=30,height=40,font=("Arial", 15, "bold"))
submit_button.pack(pady=10)


#Вивід Передбачень
result_label = ctk.CTkLabel(window, text="", font=("Arial", 18), wraplength=400)
result_label.pack(pady=10)

window.mainloop()
